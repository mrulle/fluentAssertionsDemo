# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
indent_style         = space
trim_trailing_whitespace = true
trim_trailing_white_space_on_save = true
end_of_line = crlf

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

[*.{cmd,bat}]
indent_size = 2
insert_final_newline = false

[*.{ps1,psm1}]
indent_size = 2
insert_final_newline = true
charset = utf-8-bom

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace                                        = all
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_within_query_expression_clauses                          = true

# Indentation preferences
csharp_indent_block_contents                                             = true
csharp_indent_braces                                                     = false
csharp_indent_case_contents                                              = true
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = flush_left

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field                                     = false : suggestion
dotnet_style_qualification_for_property                                  = false : suggestion
dotnet_style_qualification_for_method                                    = false : suggestion
dotnet_style_qualification_for_event                                     = false : suggestion

# only use var when it's obvious what the variable type is
csharp_style_var_for_built_in_types                                      = false : none
csharp_style_var_when_type_is_apparent                                   = false : none
csharp_style_var_elsewhere                                               = false : none

# use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members               = true : suggestion
dotnet_style_predefined_type_for_member_access                           = true : suggestion

##########################################
# Styles
##########################################
# disallowed_style - Anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization  = pascal_case
dotnet_naming_style.disallowed_style.required_prefix = ____RULE_VIOLATION____
dotnet_naming_style.disallowed_style.required_suffix = ____RULE_VIOLATION____

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_have_prefix.severity             = warning
dotnet_naming_rule.static_fields_should_have_prefix.symbols              = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style                = static_prefix_style

dotnet_naming_symbols.static_fields.applicable_kinds                     = field
dotnet_naming_symbols.static_fields.required_modifiers                   = static

dotnet_naming_style.static_prefix_style.required_prefix                  = s_
dotnet_naming_style.static_prefix_style.capitalization                   = camel_case

# Instance fields are camelCase and start with m_
dotnet_naming_rule.camel_case_for_private_internal_fields.severity       = warning
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols        = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style          = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds           = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal

dotnet_naming_style.camel_case_underscore_style.required_prefix          = m_
dotnet_naming_style.camel_case_underscore_style.capitalization           = camel_case

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = error
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = error
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# Public members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.public_members_must_be_capitalized.severity = error
dotnet_naming_rule.public_members_must_be_capitalized.symbols   = public_symbols
dotnet_naming_symbols.public_symbols.applicable_kinds           = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public,protected,internal,protected_internal
dotnet_naming_rule.public_members_must_be_capitalized.style    = first_word_upper_case_style
dotnet_naming_style.first_word_upper_case_style.capitalization = first_word_upper

# No non-private instance fields are allowed
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.symbols               = stylecop_fields_must_be_private_group
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.style                 = disallowed_style
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.severity              = error

# Code style defaults
dotnet_sort_system_directives_first                                      = true
csharp_preserve_single_line_blocks                                       = true
csharp_preserve_single_line_statements                                   = false

# Suggest more modern language features when available
dotnet_style_object_initializer                                          = true : suggestion
dotnet_style_collection_initializer                                      = true : suggestion
dotnet_style_explicit_tuple_names                                        = true : suggestion
dotnet_style_coalesce_expression                                         = true : suggestion
dotnet_style_null_propagation                                            = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                                   = false : none
csharp_style_expression_bodied_constructors                              = false : none
csharp_style_expression_bodied_operators                                 = false : none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties                                = true : none
csharp_style_expression_bodied_indexers                                  = true : none
csharp_style_expression_bodied_accessors                                 = true : none

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check                    = true : error
csharp_style_pattern_matching_over_as_with_null_check                    = true : error
csharp_style_inlined_variable_declaration                                = true : error

# Null checking preferences
csharp_style_throw_expression                                            = true:error
csharp_style_conditional_delegate_call                                   = true:suggestion

# Space preferences
csharp_space_after_cast                                                  = false
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_after_comma                                                 = true
csharp_space_after_dot                                                   = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_around_declaration_statements                               = do_not_ignore
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_before_comma                                                = false
csharp_space_before_dot                                                  = false
csharp_space_before_open_square_brackets                                 = false
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis        = false
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_parentheses                                         = false
csharp_space_between_square_brackets                                     = false

# Other
dotnet_code_quality_unused_parameters = non_public:warning
dotnet_style_readonly_field = true:warning

##########################################
# Styles
##########################################